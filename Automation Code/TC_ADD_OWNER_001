import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable
import com.kms.katalon.core.windows.keyword.WindowsBuiltinKeywords as Windows
import static com.kms.katalon.core.testobject.ObjectRepository.findWindowsObject
import com.kms.katalon.core.testobject.ConditionType as ConditionType
import com.kms.katalon.core.testobject.RestRequestObjectBuilder as RestRequestObjectBuilder
import com.kms.katalon.core.testobject.TestObjectProperty as TestObjectProperty
import java.nio.file.Files as Files
import java.nio.file.Path as Path
import java.nio.file.Paths as Paths
import com.kms.katalon.core.configuration.RunConfiguration as RunConfiguration
import com.kms.katalon.core.testobject.RequestObject
import com.kms.katalon.core.testobject.ResponseObject
import com.kms.katalon.core.testobject.impl.HttpTextBodyContent
import static org.assertj.core.api.Assertions.*
import com.kms.katalon.core.webservice.verification.WSResponseManager
import groovy.json.JsonSlurper
import internal.GlobalVariable as GlobalVariable

//Input data from Petclinic
CustomKeywords.'clinic.uniqueLast.generateLast'()
//Automating adding a new Veterinarian
WebUI.openBrowser('')

WebUI.navigateToUrl('http://admin:admin@clinic.doveryai-no-proveryai.com:9966/petclinic/swagger-ui.html')

WebUI.navigateToUrl('https://clinic.doveryai-no-proveryai.com/petclinic/owners')

WebUI.click(findTestObject('Object Repository/Page_SpringPetclinicAngular/a_Owners'))

WebUI.click(findTestObject('Object Repository/Page_SpringPetclinicAngular/span_Add New'))

//Custom Keyword for variable firstName "Jason"
def firstName =  CustomKeywords.'clinic.uniqueFirst.generateFirst'()

WebUI.setText(findTestObject('Object Repository/Page_SpringPetclinicAngular/input_First Name_firstName'), firstName)

//Custom Keyword for variable LastName "Jackson(timestamp)"
def lastName = CustomKeywords.'clinic.uniqueLast.generateLast'()

WebUI.setText(findTestObject('Object Repository/Page_SpringPetclinicAngular/input_Last Name_lastName'), lastName)

//Custom Keyword for variable address "2500 Thunderdome Dr"
def street = CustomKeywords.'clinic.street.generateStreet'()

WebUI.setText(findTestObject('Object Repository/Page_SpringPetclinicAngular/input_Address_address'), street)

//Custom Keyword for variable city "Austin"
def city = CustomKeywords.'clinic.city.generateCity'()

WebUI.setText(findTestObject('Object Repository/Page_SpringPetclinicAngular/input_City_city'), city)

//Custom Keyword for variable telephone "2143189930"
def telephone = CustomKeywords.'clinic.telephone.generateTelephone'()

WebUI.setText(findTestObject('Object Repository/Page_SpringPetclinicAngular/input_Telephone_telephone'), telephone)

WebUI.click(findTestObject('Page_SpringPetclinicAngular/button_Add Owner'))

//Formatting with JsonSlurper for JSON fields
def response = WS.sendRequest(findTestObject('Object Repository/OwnerAPI')) //get Owner API data and store in variable called "response"
def slurper = new groovy.json.JsonSlurper()
def result = slurper.parseText(response.getResponseBodyContent()) //JsonSlurper parse api body 
def value = result[(result.size() - 1)]
//End of JSON formatting

//Verification of all entries
WS.verifyEqual(firstName, value.firstName)
WS.verifyEqual(lastName, value.lastName)
WS.verifyEqual(street, value.address)
WS.verifyEqual(city, value.city)
WS.verifyEqual(telephone, value.telephone)
//End of Verification

//Printing Output to Console
println("..value extracted is : "+ value) 
println("..Results are: "+ firstName + " is to " + value.firstName)
println("..Results are: "+ lastName + " is to " + value.lastName)
println("..Results are: "+ street + " is to " + value.address)
println("..Results are: "+ city + " is to " + value.city)
println("..Results are: "+ telephone + "is to " + value.telephone)
println(result.size())
//End of Print to Console
